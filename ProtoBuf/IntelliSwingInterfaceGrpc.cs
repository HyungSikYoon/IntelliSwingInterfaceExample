// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: IntelliSwingInterface.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace IntelliSwing {
  public static partial class IntelliSwingProtocol
  {
    static readonly string __ServiceName = "IntelliSwing.IntelliSwingProtocol";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::IntelliSwing.InitializeMsg> __Marshaller_IntelliSwing_InitializeMsg = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::IntelliSwing.InitializeMsg.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::IntelliSwing.ReturnMsg> __Marshaller_IntelliSwing_ReturnMsg = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::IntelliSwing.ReturnMsg.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::IntelliSwing.ReleaseMsg> __Marshaller_IntelliSwing_ReleaseMsg = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::IntelliSwing.ReleaseMsg.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::IntelliSwing.StartMsg> __Marshaller_IntelliSwing_StartMsg = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::IntelliSwing.StartMsg.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::IntelliSwing.SensorRunningMsg> __Marshaller_IntelliSwing_SensorRunningMsg = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::IntelliSwing.SensorRunningMsg.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::IntelliSwing.ShotImageRequest> __Marshaller_IntelliSwing_ShotImageRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::IntelliSwing.ShotImageRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::IntelliSwing.ImageData> __Marshaller_IntelliSwing_ImageData = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::IntelliSwing.ImageData.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::IntelliSwing.DeviceInfo> __Marshaller_IntelliSwing_DeviceInfo = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::IntelliSwing.DeviceInfo.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::IntelliSwing.DeviceStatus> __Marshaller_IntelliSwing_DeviceStatus = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::IntelliSwing.DeviceStatus.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::IntelliSwing.LogRequest> __Marshaller_IntelliSwing_LogRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::IntelliSwing.LogRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::IntelliSwing.LogMessage> __Marshaller_IntelliSwing_LogMessage = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::IntelliSwing.LogMessage.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::IntelliSwing.StatisticsRequest> __Marshaller_IntelliSwing_StatisticsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::IntelliSwing.StatisticsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::IntelliSwing.SensorStatistics> __Marshaller_IntelliSwing_SensorStatistics = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::IntelliSwing.SensorStatistics.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::IntelliSwing.SiteCalibrationRequest> __Marshaller_IntelliSwing_SiteCalibrationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::IntelliSwing.SiteCalibrationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::IntelliSwing.SiteCalibrationResult> __Marshaller_IntelliSwing_SiteCalibrationResult = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::IntelliSwing.SiteCalibrationResult.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::IntelliSwing.UpdateFirmwareRequest> __Marshaller_IntelliSwing_UpdateFirmwareRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::IntelliSwing.UpdateFirmwareRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::IntelliSwing.UpdateFirmwareResult> __Marshaller_IntelliSwing_UpdateFirmwareResult = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::IntelliSwing.UpdateFirmwareResult.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::IntelliSwing.CameraImageRequest> __Marshaller_IntelliSwing_CameraImageRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::IntelliSwing.CameraImageRequest.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::IntelliSwing.InitializeMsg, global::IntelliSwing.ReturnMsg> __Method_Initialize = new grpc::Method<global::IntelliSwing.InitializeMsg, global::IntelliSwing.ReturnMsg>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Initialize",
        __Marshaller_IntelliSwing_InitializeMsg,
        __Marshaller_IntelliSwing_ReturnMsg);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::IntelliSwing.ReleaseMsg, global::IntelliSwing.ReturnMsg> __Method_Release = new grpc::Method<global::IntelliSwing.ReleaseMsg, global::IntelliSwing.ReturnMsg>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Release",
        __Marshaller_IntelliSwing_ReleaseMsg,
        __Marshaller_IntelliSwing_ReturnMsg);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::IntelliSwing.ReturnMsg> __Method_Reboot = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::IntelliSwing.ReturnMsg>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Reboot",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_IntelliSwing_ReturnMsg);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::IntelliSwing.StartMsg, global::IntelliSwing.SensorRunningMsg> __Method_Start = new grpc::Method<global::IntelliSwing.StartMsg, global::IntelliSwing.SensorRunningMsg>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "Start",
        __Marshaller_IntelliSwing_StartMsg,
        __Marshaller_IntelliSwing_SensorRunningMsg);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::IntelliSwing.ReturnMsg> __Method_Stop = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::IntelliSwing.ReturnMsg>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Stop",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_IntelliSwing_ReturnMsg);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::IntelliSwing.ShotImageRequest, global::IntelliSwing.ImageData> __Method_GetClubImage = new grpc::Method<global::IntelliSwing.ShotImageRequest, global::IntelliSwing.ImageData>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetClubImage",
        __Marshaller_IntelliSwing_ShotImageRequest,
        __Marshaller_IntelliSwing_ImageData);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::IntelliSwing.ShotImageRequest, global::IntelliSwing.ImageData> __Method_GetBallImage = new grpc::Method<global::IntelliSwing.ShotImageRequest, global::IntelliSwing.ImageData>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetBallImage",
        __Marshaller_IntelliSwing_ShotImageRequest,
        __Marshaller_IntelliSwing_ImageData);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::IntelliSwing.DeviceInfo> __Method_GetDeviceInfo = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::IntelliSwing.DeviceInfo>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDeviceInfo",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_IntelliSwing_DeviceInfo);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::IntelliSwing.DeviceStatus> __Method_GetDeviceStatus = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::IntelliSwing.DeviceStatus>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDeviceStatus",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_IntelliSwing_DeviceStatus);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::IntelliSwing.LogRequest, global::IntelliSwing.LogMessage> __Method_GetLog = new grpc::Method<global::IntelliSwing.LogRequest, global::IntelliSwing.LogMessage>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetLog",
        __Marshaller_IntelliSwing_LogRequest,
        __Marshaller_IntelliSwing_LogMessage);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::IntelliSwing.StatisticsRequest, global::IntelliSwing.SensorStatistics> __Method_GetStatistics = new grpc::Method<global::IntelliSwing.StatisticsRequest, global::IntelliSwing.SensorStatistics>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetStatistics",
        __Marshaller_IntelliSwing_StatisticsRequest,
        __Marshaller_IntelliSwing_SensorStatistics);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::IntelliSwing.SiteCalibrationRequest, global::IntelliSwing.SiteCalibrationResult> __Method_RunSiteCalibration = new grpc::Method<global::IntelliSwing.SiteCalibrationRequest, global::IntelliSwing.SiteCalibrationResult>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RunSiteCalibration",
        __Marshaller_IntelliSwing_SiteCalibrationRequest,
        __Marshaller_IntelliSwing_SiteCalibrationResult);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::IntelliSwing.UpdateFirmwareRequest, global::IntelliSwing.UpdateFirmwareResult> __Method_UpdateFirmware = new grpc::Method<global::IntelliSwing.UpdateFirmwareRequest, global::IntelliSwing.UpdateFirmwareResult>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateFirmware",
        __Marshaller_IntelliSwing_UpdateFirmwareRequest,
        __Marshaller_IntelliSwing_UpdateFirmwareResult);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::IntelliSwing.CameraImageRequest, global::IntelliSwing.ImageData> __Method_GetImage = new grpc::Method<global::IntelliSwing.CameraImageRequest, global::IntelliSwing.ImageData>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetImage",
        __Marshaller_IntelliSwing_CameraImageRequest,
        __Marshaller_IntelliSwing_ImageData);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::IntelliSwing.IntelliSwingInterfaceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of IntelliSwingProtocol</summary>
    [grpc::BindServiceMethod(typeof(IntelliSwingProtocol), "BindService")]
    public abstract partial class IntelliSwingProtocolBase
    {
      /// <summary>
      /// Common
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::IntelliSwing.ReturnMsg> Initialize(global::IntelliSwing.InitializeMsg request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::IntelliSwing.ReturnMsg> Release(global::IntelliSwing.ReleaseMsg request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::IntelliSwing.ReturnMsg> Reboot(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Sensor
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="responseStream">Used for sending responses back to the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>A task indicating completion of the handler.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task Start(global::IntelliSwing.StartMsg request, grpc::IServerStreamWriter<global::IntelliSwing.SensorRunningMsg> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::IntelliSwing.ReturnMsg> Stop(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::IntelliSwing.ImageData> GetClubImage(global::IntelliSwing.ShotImageRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::IntelliSwing.ImageData> GetBallImage(global::IntelliSwing.ShotImageRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Service
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::IntelliSwing.DeviceInfo> GetDeviceInfo(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::IntelliSwing.DeviceStatus> GetDeviceStatus(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::IntelliSwing.LogMessage> GetLog(global::IntelliSwing.LogRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::IntelliSwing.SensorStatistics> GetStatistics(global::IntelliSwing.StatisticsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::IntelliSwing.SiteCalibrationResult> RunSiteCalibration(global::IntelliSwing.SiteCalibrationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::IntelliSwing.UpdateFirmwareResult> UpdateFirmware(global::IntelliSwing.UpdateFirmwareRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::IntelliSwing.ImageData> GetImage(global::IntelliSwing.CameraImageRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for IntelliSwingProtocol</summary>
    public partial class IntelliSwingProtocolClient : grpc::ClientBase<IntelliSwingProtocolClient>
    {
      /// <summary>Creates a new client for IntelliSwingProtocol</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public IntelliSwingProtocolClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for IntelliSwingProtocol that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public IntelliSwingProtocolClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected IntelliSwingProtocolClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected IntelliSwingProtocolClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Common
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::IntelliSwing.ReturnMsg Initialize(global::IntelliSwing.InitializeMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Initialize(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Common
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::IntelliSwing.ReturnMsg Initialize(global::IntelliSwing.InitializeMsg request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Initialize, null, options, request);
      }
      /// <summary>
      /// Common
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::IntelliSwing.ReturnMsg> InitializeAsync(global::IntelliSwing.InitializeMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InitializeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Common
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::IntelliSwing.ReturnMsg> InitializeAsync(global::IntelliSwing.InitializeMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Initialize, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::IntelliSwing.ReturnMsg Release(global::IntelliSwing.ReleaseMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Release(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::IntelliSwing.ReturnMsg Release(global::IntelliSwing.ReleaseMsg request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Release, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::IntelliSwing.ReturnMsg> ReleaseAsync(global::IntelliSwing.ReleaseMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReleaseAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::IntelliSwing.ReturnMsg> ReleaseAsync(global::IntelliSwing.ReleaseMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Release, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::IntelliSwing.ReturnMsg Reboot(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Reboot(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::IntelliSwing.ReturnMsg Reboot(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Reboot, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::IntelliSwing.ReturnMsg> RebootAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RebootAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::IntelliSwing.ReturnMsg> RebootAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Reboot, null, options, request);
      }
      /// <summary>
      /// Sensor
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::IntelliSwing.SensorRunningMsg> Start(global::IntelliSwing.StartMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Start(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Sensor
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::IntelliSwing.SensorRunningMsg> Start(global::IntelliSwing.StartMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_Start, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::IntelliSwing.ReturnMsg Stop(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Stop(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::IntelliSwing.ReturnMsg Stop(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Stop, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::IntelliSwing.ReturnMsg> StopAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StopAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::IntelliSwing.ReturnMsg> StopAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Stop, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::IntelliSwing.ImageData GetClubImage(global::IntelliSwing.ShotImageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetClubImage(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::IntelliSwing.ImageData GetClubImage(global::IntelliSwing.ShotImageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetClubImage, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::IntelliSwing.ImageData> GetClubImageAsync(global::IntelliSwing.ShotImageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetClubImageAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::IntelliSwing.ImageData> GetClubImageAsync(global::IntelliSwing.ShotImageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetClubImage, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::IntelliSwing.ImageData GetBallImage(global::IntelliSwing.ShotImageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBallImage(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::IntelliSwing.ImageData GetBallImage(global::IntelliSwing.ShotImageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetBallImage, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::IntelliSwing.ImageData> GetBallImageAsync(global::IntelliSwing.ShotImageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBallImageAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::IntelliSwing.ImageData> GetBallImageAsync(global::IntelliSwing.ShotImageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetBallImage, null, options, request);
      }
      /// <summary>
      /// Service
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::IntelliSwing.DeviceInfo GetDeviceInfo(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDeviceInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Service
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::IntelliSwing.DeviceInfo GetDeviceInfo(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDeviceInfo, null, options, request);
      }
      /// <summary>
      /// Service
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::IntelliSwing.DeviceInfo> GetDeviceInfoAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDeviceInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Service
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::IntelliSwing.DeviceInfo> GetDeviceInfoAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDeviceInfo, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::IntelliSwing.DeviceStatus GetDeviceStatus(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDeviceStatus(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::IntelliSwing.DeviceStatus GetDeviceStatus(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDeviceStatus, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::IntelliSwing.DeviceStatus> GetDeviceStatusAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDeviceStatusAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::IntelliSwing.DeviceStatus> GetDeviceStatusAsync(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDeviceStatus, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::IntelliSwing.LogMessage GetLog(global::IntelliSwing.LogRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetLog(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::IntelliSwing.LogMessage GetLog(global::IntelliSwing.LogRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetLog, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::IntelliSwing.LogMessage> GetLogAsync(global::IntelliSwing.LogRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetLogAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::IntelliSwing.LogMessage> GetLogAsync(global::IntelliSwing.LogRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetLog, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::IntelliSwing.SensorStatistics GetStatistics(global::IntelliSwing.StatisticsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetStatistics(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::IntelliSwing.SensorStatistics GetStatistics(global::IntelliSwing.StatisticsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetStatistics, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::IntelliSwing.SensorStatistics> GetStatisticsAsync(global::IntelliSwing.StatisticsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetStatisticsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::IntelliSwing.SensorStatistics> GetStatisticsAsync(global::IntelliSwing.StatisticsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetStatistics, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::IntelliSwing.SiteCalibrationResult RunSiteCalibration(global::IntelliSwing.SiteCalibrationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RunSiteCalibration(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::IntelliSwing.SiteCalibrationResult RunSiteCalibration(global::IntelliSwing.SiteCalibrationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RunSiteCalibration, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::IntelliSwing.SiteCalibrationResult> RunSiteCalibrationAsync(global::IntelliSwing.SiteCalibrationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RunSiteCalibrationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::IntelliSwing.SiteCalibrationResult> RunSiteCalibrationAsync(global::IntelliSwing.SiteCalibrationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RunSiteCalibration, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::IntelliSwing.UpdateFirmwareResult UpdateFirmware(global::IntelliSwing.UpdateFirmwareRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateFirmware(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::IntelliSwing.UpdateFirmwareResult UpdateFirmware(global::IntelliSwing.UpdateFirmwareRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateFirmware, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::IntelliSwing.UpdateFirmwareResult> UpdateFirmwareAsync(global::IntelliSwing.UpdateFirmwareRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateFirmwareAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::IntelliSwing.UpdateFirmwareResult> UpdateFirmwareAsync(global::IntelliSwing.UpdateFirmwareRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateFirmware, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::IntelliSwing.ImageData GetImage(global::IntelliSwing.CameraImageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetImage(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::IntelliSwing.ImageData GetImage(global::IntelliSwing.CameraImageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetImage, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::IntelliSwing.ImageData> GetImageAsync(global::IntelliSwing.CameraImageRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetImageAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::IntelliSwing.ImageData> GetImageAsync(global::IntelliSwing.CameraImageRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetImage, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override IntelliSwingProtocolClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new IntelliSwingProtocolClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(IntelliSwingProtocolBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Initialize, serviceImpl.Initialize)
          .AddMethod(__Method_Release, serviceImpl.Release)
          .AddMethod(__Method_Reboot, serviceImpl.Reboot)
          .AddMethod(__Method_Start, serviceImpl.Start)
          .AddMethod(__Method_Stop, serviceImpl.Stop)
          .AddMethod(__Method_GetClubImage, serviceImpl.GetClubImage)
          .AddMethod(__Method_GetBallImage, serviceImpl.GetBallImage)
          .AddMethod(__Method_GetDeviceInfo, serviceImpl.GetDeviceInfo)
          .AddMethod(__Method_GetDeviceStatus, serviceImpl.GetDeviceStatus)
          .AddMethod(__Method_GetLog, serviceImpl.GetLog)
          .AddMethod(__Method_GetStatistics, serviceImpl.GetStatistics)
          .AddMethod(__Method_RunSiteCalibration, serviceImpl.RunSiteCalibration)
          .AddMethod(__Method_UpdateFirmware, serviceImpl.UpdateFirmware)
          .AddMethod(__Method_GetImage, serviceImpl.GetImage).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, IntelliSwingProtocolBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_Initialize, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::IntelliSwing.InitializeMsg, global::IntelliSwing.ReturnMsg>(serviceImpl.Initialize));
      serviceBinder.AddMethod(__Method_Release, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::IntelliSwing.ReleaseMsg, global::IntelliSwing.ReturnMsg>(serviceImpl.Release));
      serviceBinder.AddMethod(__Method_Reboot, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Empty, global::IntelliSwing.ReturnMsg>(serviceImpl.Reboot));
      serviceBinder.AddMethod(__Method_Start, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::IntelliSwing.StartMsg, global::IntelliSwing.SensorRunningMsg>(serviceImpl.Start));
      serviceBinder.AddMethod(__Method_Stop, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Empty, global::IntelliSwing.ReturnMsg>(serviceImpl.Stop));
      serviceBinder.AddMethod(__Method_GetClubImage, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::IntelliSwing.ShotImageRequest, global::IntelliSwing.ImageData>(serviceImpl.GetClubImage));
      serviceBinder.AddMethod(__Method_GetBallImage, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::IntelliSwing.ShotImageRequest, global::IntelliSwing.ImageData>(serviceImpl.GetBallImage));
      serviceBinder.AddMethod(__Method_GetDeviceInfo, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Empty, global::IntelliSwing.DeviceInfo>(serviceImpl.GetDeviceInfo));
      serviceBinder.AddMethod(__Method_GetDeviceStatus, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Empty, global::IntelliSwing.DeviceStatus>(serviceImpl.GetDeviceStatus));
      serviceBinder.AddMethod(__Method_GetLog, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::IntelliSwing.LogRequest, global::IntelliSwing.LogMessage>(serviceImpl.GetLog));
      serviceBinder.AddMethod(__Method_GetStatistics, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::IntelliSwing.StatisticsRequest, global::IntelliSwing.SensorStatistics>(serviceImpl.GetStatistics));
      serviceBinder.AddMethod(__Method_RunSiteCalibration, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::IntelliSwing.SiteCalibrationRequest, global::IntelliSwing.SiteCalibrationResult>(serviceImpl.RunSiteCalibration));
      serviceBinder.AddMethod(__Method_UpdateFirmware, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::IntelliSwing.UpdateFirmwareRequest, global::IntelliSwing.UpdateFirmwareResult>(serviceImpl.UpdateFirmware));
      serviceBinder.AddMethod(__Method_GetImage, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::IntelliSwing.CameraImageRequest, global::IntelliSwing.ImageData>(serviceImpl.GetImage));
    }

  }
}
#endregion
