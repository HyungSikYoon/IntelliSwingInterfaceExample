// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: IntelliSwingService.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace IntelliSwing {

  /// <summary>Holder for reflection information generated from IntelliSwingService.proto</summary>
  public static partial class IntelliSwingServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for IntelliSwingService.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static IntelliSwingServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChlJbnRlbGxpU3dpbmdTZXJ2aWNlLnByb3RvEgxJbnRlbGxpU3dpbmcaCnR5",
            "cGUucHJvdG8ibwoKRGV2aWNlSW5mbxIRCglkZXZpY2VWZXIYASABKAkSDwoH",
            "ZnBnYVZlchgCIAEoCRITCgtzb2Z0d2FyZVZlchgDIAEoCRIUCgxzZXJpYWxO",
            "dW1iZXIYBCABKAkSEgoKc2Vuc29yTmFtZRgFIAEoCSKaAQoMRGl2aWNlU3Rh",
            "dHVzEiwKC3NlbnNvclN0YXRlGAEgAygLMhcuSW50ZWxsaVN3aW5nLlJldHVy",
            "bk1zZxIsCgtzeXN0ZW1TdGF0ZRgCIAEoCzIXLkludGVsbGlTd2luZy5SZXR1",
            "cm5Nc2cSGQoRZGV2aWNlVGVtcGVyYXR1cmUYBSABKAISEwoLYmF0dGVyeUlu",
            "Zm8YBiABKAIiPQoKTG9nUmVxdWVzdBITCgtzeXN0ZW1SYW5nZRgBIAEoBRIa",
            "ChJwcm9jZXNzaW5nTG9ncmFuZ2UYAiABKAUiNgoKTG9nTWVzc2FnZRIRCglz",
            "eXN0ZW1Mb2cYASADKAkSFQoNcHJvY2Vzc2luZ0xvZxgCIAMoCSImChBTZW5z",
            "b3JTdGF0aXN0aWNzEhIKCnNob3RfY291bnQYASABKAUiPwoVU2l0ZUNhbGli",
            "cmF0aW9uUmVzdWx0EiYKBXN0YXRlGAEgASgLMhcuSW50ZWxsaVN3aW5nLlJl",
            "dHVybk1zZyI4CghGaXJtd2FyZRIWCg5zZW5zb3JGaXJtd2FyZRgBIAEoDBIU",
            "CgxmcGdhRmlybXdhcmUYAiABKAwibQoUVXBkYXRlRmlybXdhcmVSZXN1bHQS",
            "KgoJRnBnYVN0YXRlGAEgASgLMhcuSW50ZWxsaVN3aW5nLlJldHVybk1zZxIp",
            "CghTZW5zb3JTVxgCIAEoCzIXLkludGVsbGlTd2luZy5SZXR1cm5Nc2diBnBy",
            "b3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::IntelliSwing.TypeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::IntelliSwing.DeviceInfo), global::IntelliSwing.DeviceInfo.Parser, new[]{ "DeviceVer", "FpgaVer", "SoftwareVer", "SerialNumber", "SensorName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IntelliSwing.DiviceStatus), global::IntelliSwing.DiviceStatus.Parser, new[]{ "SensorState", "SystemState", "DeviceTemperature", "BatteryInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IntelliSwing.LogRequest), global::IntelliSwing.LogRequest.Parser, new[]{ "SystemRange", "ProcessingLogrange" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IntelliSwing.LogMessage), global::IntelliSwing.LogMessage.Parser, new[]{ "SystemLog", "ProcessingLog" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IntelliSwing.SensorStatistics), global::IntelliSwing.SensorStatistics.Parser, new[]{ "ShotCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IntelliSwing.SiteCalibrationResult), global::IntelliSwing.SiteCalibrationResult.Parser, new[]{ "State" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IntelliSwing.Firmware), global::IntelliSwing.Firmware.Parser, new[]{ "SensorFirmware", "FpgaFirmware" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::IntelliSwing.UpdateFirmwareResult), global::IntelliSwing.UpdateFirmwareResult.Parser, new[]{ "FpgaState", "SensorSW" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class DeviceInfo : pb::IMessage<DeviceInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeviceInfo> _parser = new pb::MessageParser<DeviceInfo>(() => new DeviceInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DeviceInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IntelliSwing.IntelliSwingServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeviceInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeviceInfo(DeviceInfo other) : this() {
      deviceVer_ = other.deviceVer_;
      fpgaVer_ = other.fpgaVer_;
      softwareVer_ = other.softwareVer_;
      serialNumber_ = other.serialNumber_;
      sensorName_ = other.sensorName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DeviceInfo Clone() {
      return new DeviceInfo(this);
    }

    /// <summary>Field number for the "deviceVer" field.</summary>
    public const int DeviceVerFieldNumber = 1;
    private string deviceVer_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DeviceVer {
      get { return deviceVer_; }
      set {
        deviceVer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fpgaVer" field.</summary>
    public const int FpgaVerFieldNumber = 2;
    private string fpgaVer_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FpgaVer {
      get { return fpgaVer_; }
      set {
        fpgaVer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "softwareVer" field.</summary>
    public const int SoftwareVerFieldNumber = 3;
    private string softwareVer_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SoftwareVer {
      get { return softwareVer_; }
      set {
        softwareVer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "serialNumber" field.</summary>
    public const int SerialNumberFieldNumber = 4;
    private string serialNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SerialNumber {
      get { return serialNumber_; }
      set {
        serialNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sensorName" field.</summary>
    public const int SensorNameFieldNumber = 5;
    private string sensorName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SensorName {
      get { return sensorName_; }
      set {
        sensorName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DeviceInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DeviceInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeviceVer != other.DeviceVer) return false;
      if (FpgaVer != other.FpgaVer) return false;
      if (SoftwareVer != other.SoftwareVer) return false;
      if (SerialNumber != other.SerialNumber) return false;
      if (SensorName != other.SensorName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (DeviceVer.Length != 0) hash ^= DeviceVer.GetHashCode();
      if (FpgaVer.Length != 0) hash ^= FpgaVer.GetHashCode();
      if (SoftwareVer.Length != 0) hash ^= SoftwareVer.GetHashCode();
      if (SerialNumber.Length != 0) hash ^= SerialNumber.GetHashCode();
      if (SensorName.Length != 0) hash ^= SensorName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DeviceVer.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DeviceVer);
      }
      if (FpgaVer.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FpgaVer);
      }
      if (SoftwareVer.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SoftwareVer);
      }
      if (SerialNumber.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SerialNumber);
      }
      if (SensorName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(SensorName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DeviceVer.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DeviceVer);
      }
      if (FpgaVer.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FpgaVer);
      }
      if (SoftwareVer.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SoftwareVer);
      }
      if (SerialNumber.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SerialNumber);
      }
      if (SensorName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(SensorName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (DeviceVer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceVer);
      }
      if (FpgaVer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FpgaVer);
      }
      if (SoftwareVer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SoftwareVer);
      }
      if (SerialNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SerialNumber);
      }
      if (SensorName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SensorName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DeviceInfo other) {
      if (other == null) {
        return;
      }
      if (other.DeviceVer.Length != 0) {
        DeviceVer = other.DeviceVer;
      }
      if (other.FpgaVer.Length != 0) {
        FpgaVer = other.FpgaVer;
      }
      if (other.SoftwareVer.Length != 0) {
        SoftwareVer = other.SoftwareVer;
      }
      if (other.SerialNumber.Length != 0) {
        SerialNumber = other.SerialNumber;
      }
      if (other.SensorName.Length != 0) {
        SensorName = other.SensorName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DeviceVer = input.ReadString();
            break;
          }
          case 18: {
            FpgaVer = input.ReadString();
            break;
          }
          case 26: {
            SoftwareVer = input.ReadString();
            break;
          }
          case 34: {
            SerialNumber = input.ReadString();
            break;
          }
          case 42: {
            SensorName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DeviceVer = input.ReadString();
            break;
          }
          case 18: {
            FpgaVer = input.ReadString();
            break;
          }
          case 26: {
            SoftwareVer = input.ReadString();
            break;
          }
          case 34: {
            SerialNumber = input.ReadString();
            break;
          }
          case 42: {
            SensorName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DiviceStatus : pb::IMessage<DiviceStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DiviceStatus> _parser = new pb::MessageParser<DiviceStatus>(() => new DiviceStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DiviceStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IntelliSwing.IntelliSwingServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DiviceStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DiviceStatus(DiviceStatus other) : this() {
      sensorState_ = other.sensorState_.Clone();
      systemState_ = other.systemState_ != null ? other.systemState_.Clone() : null;
      deviceTemperature_ = other.deviceTemperature_;
      batteryInfo_ = other.batteryInfo_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DiviceStatus Clone() {
      return new DiviceStatus(this);
    }

    /// <summary>Field number for the "sensorState" field.</summary>
    public const int SensorStateFieldNumber = 1;
    private static readonly pb::FieldCodec<global::IntelliSwing.ReturnMsg> _repeated_sensorState_codec
        = pb::FieldCodec.ForMessage(10, global::IntelliSwing.ReturnMsg.Parser);
    private readonly pbc::RepeatedField<global::IntelliSwing.ReturnMsg> sensorState_ = new pbc::RepeatedField<global::IntelliSwing.ReturnMsg>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::IntelliSwing.ReturnMsg> SensorState {
      get { return sensorState_; }
    }

    /// <summary>Field number for the "systemState" field.</summary>
    public const int SystemStateFieldNumber = 2;
    private global::IntelliSwing.ReturnMsg systemState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::IntelliSwing.ReturnMsg SystemState {
      get { return systemState_; }
      set {
        systemState_ = value;
      }
    }

    /// <summary>Field number for the "deviceTemperature" field.</summary>
    public const int DeviceTemperatureFieldNumber = 5;
    private float deviceTemperature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float DeviceTemperature {
      get { return deviceTemperature_; }
      set {
        deviceTemperature_ = value;
      }
    }

    /// <summary>Field number for the "batteryInfo" field.</summary>
    public const int BatteryInfoFieldNumber = 6;
    private float batteryInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float BatteryInfo {
      get { return batteryInfo_; }
      set {
        batteryInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DiviceStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DiviceStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!sensorState_.Equals(other.sensorState_)) return false;
      if (!object.Equals(SystemState, other.SystemState)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DeviceTemperature, other.DeviceTemperature)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(BatteryInfo, other.BatteryInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= sensorState_.GetHashCode();
      if (systemState_ != null) hash ^= SystemState.GetHashCode();
      if (DeviceTemperature != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DeviceTemperature);
      if (BatteryInfo != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(BatteryInfo);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      sensorState_.WriteTo(output, _repeated_sensorState_codec);
      if (systemState_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SystemState);
      }
      if (DeviceTemperature != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(DeviceTemperature);
      }
      if (BatteryInfo != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(BatteryInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      sensorState_.WriteTo(ref output, _repeated_sensorState_codec);
      if (systemState_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SystemState);
      }
      if (DeviceTemperature != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(DeviceTemperature);
      }
      if (BatteryInfo != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(BatteryInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += sensorState_.CalculateSize(_repeated_sensorState_codec);
      if (systemState_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SystemState);
      }
      if (DeviceTemperature != 0F) {
        size += 1 + 4;
      }
      if (BatteryInfo != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DiviceStatus other) {
      if (other == null) {
        return;
      }
      sensorState_.Add(other.sensorState_);
      if (other.systemState_ != null) {
        if (systemState_ == null) {
          SystemState = new global::IntelliSwing.ReturnMsg();
        }
        SystemState.MergeFrom(other.SystemState);
      }
      if (other.DeviceTemperature != 0F) {
        DeviceTemperature = other.DeviceTemperature;
      }
      if (other.BatteryInfo != 0F) {
        BatteryInfo = other.BatteryInfo;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            sensorState_.AddEntriesFrom(input, _repeated_sensorState_codec);
            break;
          }
          case 18: {
            if (systemState_ == null) {
              SystemState = new global::IntelliSwing.ReturnMsg();
            }
            input.ReadMessage(SystemState);
            break;
          }
          case 45: {
            DeviceTemperature = input.ReadFloat();
            break;
          }
          case 53: {
            BatteryInfo = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            sensorState_.AddEntriesFrom(ref input, _repeated_sensorState_codec);
            break;
          }
          case 18: {
            if (systemState_ == null) {
              SystemState = new global::IntelliSwing.ReturnMsg();
            }
            input.ReadMessage(SystemState);
            break;
          }
          case 45: {
            DeviceTemperature = input.ReadFloat();
            break;
          }
          case 53: {
            BatteryInfo = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LogRequest : pb::IMessage<LogRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LogRequest> _parser = new pb::MessageParser<LogRequest>(() => new LogRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LogRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IntelliSwing.IntelliSwingServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LogRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LogRequest(LogRequest other) : this() {
      systemRange_ = other.systemRange_;
      processingLogrange_ = other.processingLogrange_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LogRequest Clone() {
      return new LogRequest(this);
    }

    /// <summary>Field number for the "systemRange" field.</summary>
    public const int SystemRangeFieldNumber = 1;
    private int systemRange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SystemRange {
      get { return systemRange_; }
      set {
        systemRange_ = value;
      }
    }

    /// <summary>Field number for the "processingLogrange" field.</summary>
    public const int ProcessingLograngeFieldNumber = 2;
    private int processingLogrange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ProcessingLogrange {
      get { return processingLogrange_; }
      set {
        processingLogrange_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LogRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LogRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SystemRange != other.SystemRange) return false;
      if (ProcessingLogrange != other.ProcessingLogrange) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SystemRange != 0) hash ^= SystemRange.GetHashCode();
      if (ProcessingLogrange != 0) hash ^= ProcessingLogrange.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SystemRange != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SystemRange);
      }
      if (ProcessingLogrange != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ProcessingLogrange);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SystemRange != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SystemRange);
      }
      if (ProcessingLogrange != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ProcessingLogrange);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SystemRange != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SystemRange);
      }
      if (ProcessingLogrange != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProcessingLogrange);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LogRequest other) {
      if (other == null) {
        return;
      }
      if (other.SystemRange != 0) {
        SystemRange = other.SystemRange;
      }
      if (other.ProcessingLogrange != 0) {
        ProcessingLogrange = other.ProcessingLogrange;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SystemRange = input.ReadInt32();
            break;
          }
          case 16: {
            ProcessingLogrange = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SystemRange = input.ReadInt32();
            break;
          }
          case 16: {
            ProcessingLogrange = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LogMessage : pb::IMessage<LogMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LogMessage> _parser = new pb::MessageParser<LogMessage>(() => new LogMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LogMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IntelliSwing.IntelliSwingServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LogMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LogMessage(LogMessage other) : this() {
      systemLog_ = other.systemLog_.Clone();
      processingLog_ = other.processingLog_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LogMessage Clone() {
      return new LogMessage(this);
    }

    /// <summary>Field number for the "systemLog" field.</summary>
    public const int SystemLogFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_systemLog_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> systemLog_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> SystemLog {
      get { return systemLog_; }
    }

    /// <summary>Field number for the "processingLog" field.</summary>
    public const int ProcessingLogFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_processingLog_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> processingLog_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> ProcessingLog {
      get { return processingLog_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LogMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LogMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!systemLog_.Equals(other.systemLog_)) return false;
      if(!processingLog_.Equals(other.processingLog_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= systemLog_.GetHashCode();
      hash ^= processingLog_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      systemLog_.WriteTo(output, _repeated_systemLog_codec);
      processingLog_.WriteTo(output, _repeated_processingLog_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      systemLog_.WriteTo(ref output, _repeated_systemLog_codec);
      processingLog_.WriteTo(ref output, _repeated_processingLog_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += systemLog_.CalculateSize(_repeated_systemLog_codec);
      size += processingLog_.CalculateSize(_repeated_processingLog_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LogMessage other) {
      if (other == null) {
        return;
      }
      systemLog_.Add(other.systemLog_);
      processingLog_.Add(other.processingLog_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            systemLog_.AddEntriesFrom(input, _repeated_systemLog_codec);
            break;
          }
          case 18: {
            processingLog_.AddEntriesFrom(input, _repeated_processingLog_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            systemLog_.AddEntriesFrom(ref input, _repeated_systemLog_codec);
            break;
          }
          case 18: {
            processingLog_.AddEntriesFrom(ref input, _repeated_processingLog_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SensorStatistics : pb::IMessage<SensorStatistics>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SensorStatistics> _parser = new pb::MessageParser<SensorStatistics>(() => new SensorStatistics());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SensorStatistics> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IntelliSwing.IntelliSwingServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SensorStatistics() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SensorStatistics(SensorStatistics other) : this() {
      shotCount_ = other.shotCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SensorStatistics Clone() {
      return new SensorStatistics(this);
    }

    /// <summary>Field number for the "shot_count" field.</summary>
    public const int ShotCountFieldNumber = 1;
    private int shotCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ShotCount {
      get { return shotCount_; }
      set {
        shotCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SensorStatistics);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SensorStatistics other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ShotCount != other.ShotCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ShotCount != 0) hash ^= ShotCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ShotCount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ShotCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ShotCount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ShotCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ShotCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ShotCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SensorStatistics other) {
      if (other == null) {
        return;
      }
      if (other.ShotCount != 0) {
        ShotCount = other.ShotCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ShotCount = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ShotCount = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SiteCalibrationResult : pb::IMessage<SiteCalibrationResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SiteCalibrationResult> _parser = new pb::MessageParser<SiteCalibrationResult>(() => new SiteCalibrationResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SiteCalibrationResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IntelliSwing.IntelliSwingServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SiteCalibrationResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SiteCalibrationResult(SiteCalibrationResult other) : this() {
      state_ = other.state_ != null ? other.state_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SiteCalibrationResult Clone() {
      return new SiteCalibrationResult(this);
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 1;
    private global::IntelliSwing.ReturnMsg state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::IntelliSwing.ReturnMsg State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SiteCalibrationResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SiteCalibrationResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(State, other.State)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (state_ != null) hash ^= State.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (state_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (state_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (state_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(State);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SiteCalibrationResult other) {
      if (other == null) {
        return;
      }
      if (other.state_ != null) {
        if (state_ == null) {
          State = new global::IntelliSwing.ReturnMsg();
        }
        State.MergeFrom(other.State);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (state_ == null) {
              State = new global::IntelliSwing.ReturnMsg();
            }
            input.ReadMessage(State);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (state_ == null) {
              State = new global::IntelliSwing.ReturnMsg();
            }
            input.ReadMessage(State);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Firmware : pb::IMessage<Firmware>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Firmware> _parser = new pb::MessageParser<Firmware>(() => new Firmware());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Firmware> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IntelliSwing.IntelliSwingServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Firmware() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Firmware(Firmware other) : this() {
      sensorFirmware_ = other.sensorFirmware_;
      fpgaFirmware_ = other.fpgaFirmware_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Firmware Clone() {
      return new Firmware(this);
    }

    /// <summary>Field number for the "sensorFirmware" field.</summary>
    public const int SensorFirmwareFieldNumber = 1;
    private pb::ByteString sensorFirmware_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString SensorFirmware {
      get { return sensorFirmware_; }
      set {
        sensorFirmware_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fpgaFirmware" field.</summary>
    public const int FpgaFirmwareFieldNumber = 2;
    private pb::ByteString fpgaFirmware_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString FpgaFirmware {
      get { return fpgaFirmware_; }
      set {
        fpgaFirmware_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Firmware);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Firmware other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SensorFirmware != other.SensorFirmware) return false;
      if (FpgaFirmware != other.FpgaFirmware) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SensorFirmware.Length != 0) hash ^= SensorFirmware.GetHashCode();
      if (FpgaFirmware.Length != 0) hash ^= FpgaFirmware.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SensorFirmware.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(SensorFirmware);
      }
      if (FpgaFirmware.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(FpgaFirmware);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SensorFirmware.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(SensorFirmware);
      }
      if (FpgaFirmware.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(FpgaFirmware);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SensorFirmware.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(SensorFirmware);
      }
      if (FpgaFirmware.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(FpgaFirmware);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Firmware other) {
      if (other == null) {
        return;
      }
      if (other.SensorFirmware.Length != 0) {
        SensorFirmware = other.SensorFirmware;
      }
      if (other.FpgaFirmware.Length != 0) {
        FpgaFirmware = other.FpgaFirmware;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SensorFirmware = input.ReadBytes();
            break;
          }
          case 18: {
            FpgaFirmware = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SensorFirmware = input.ReadBytes();
            break;
          }
          case 18: {
            FpgaFirmware = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UpdateFirmwareResult : pb::IMessage<UpdateFirmwareResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateFirmwareResult> _parser = new pb::MessageParser<UpdateFirmwareResult>(() => new UpdateFirmwareResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpdateFirmwareResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::IntelliSwing.IntelliSwingServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateFirmwareResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateFirmwareResult(UpdateFirmwareResult other) : this() {
      fpgaState_ = other.fpgaState_ != null ? other.fpgaState_.Clone() : null;
      sensorSW_ = other.sensorSW_ != null ? other.sensorSW_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateFirmwareResult Clone() {
      return new UpdateFirmwareResult(this);
    }

    /// <summary>Field number for the "FpgaState" field.</summary>
    public const int FpgaStateFieldNumber = 1;
    private global::IntelliSwing.ReturnMsg fpgaState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::IntelliSwing.ReturnMsg FpgaState {
      get { return fpgaState_; }
      set {
        fpgaState_ = value;
      }
    }

    /// <summary>Field number for the "SensorSW" field.</summary>
    public const int SensorSWFieldNumber = 2;
    private global::IntelliSwing.ReturnMsg sensorSW_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::IntelliSwing.ReturnMsg SensorSW {
      get { return sensorSW_; }
      set {
        sensorSW_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpdateFirmwareResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpdateFirmwareResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(FpgaState, other.FpgaState)) return false;
      if (!object.Equals(SensorSW, other.SensorSW)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (fpgaState_ != null) hash ^= FpgaState.GetHashCode();
      if (sensorSW_ != null) hash ^= SensorSW.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (fpgaState_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FpgaState);
      }
      if (sensorSW_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SensorSW);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (fpgaState_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FpgaState);
      }
      if (sensorSW_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SensorSW);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (fpgaState_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FpgaState);
      }
      if (sensorSW_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SensorSW);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpdateFirmwareResult other) {
      if (other == null) {
        return;
      }
      if (other.fpgaState_ != null) {
        if (fpgaState_ == null) {
          FpgaState = new global::IntelliSwing.ReturnMsg();
        }
        FpgaState.MergeFrom(other.FpgaState);
      }
      if (other.sensorSW_ != null) {
        if (sensorSW_ == null) {
          SensorSW = new global::IntelliSwing.ReturnMsg();
        }
        SensorSW.MergeFrom(other.SensorSW);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (fpgaState_ == null) {
              FpgaState = new global::IntelliSwing.ReturnMsg();
            }
            input.ReadMessage(FpgaState);
            break;
          }
          case 18: {
            if (sensorSW_ == null) {
              SensorSW = new global::IntelliSwing.ReturnMsg();
            }
            input.ReadMessage(SensorSW);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (fpgaState_ == null) {
              FpgaState = new global::IntelliSwing.ReturnMsg();
            }
            input.ReadMessage(FpgaState);
            break;
          }
          case 18: {
            if (sensorSW_ == null) {
              SensorSW = new global::IntelliSwing.ReturnMsg();
            }
            input.ReadMessage(SensorSW);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
