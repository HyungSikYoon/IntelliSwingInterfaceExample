// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: type.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_type_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_type_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3018000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3018000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_type_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_type_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[5]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_type_2eproto;
namespace IntelliSwing {
class Point2f;
struct Point2fDefaultTypeInternal;
extern Point2fDefaultTypeInternal _Point2f_default_instance_;
class Point2i;
struct Point2iDefaultTypeInternal;
extern Point2iDefaultTypeInternal _Point2i_default_instance_;
class Point3f;
struct Point3fDefaultTypeInternal;
extern Point3fDefaultTypeInternal _Point3f_default_instance_;
class Point3i;
struct Point3iDefaultTypeInternal;
extern Point3iDefaultTypeInternal _Point3i_default_instance_;
class ReturnMsg;
struct ReturnMsgDefaultTypeInternal;
extern ReturnMsgDefaultTypeInternal _ReturnMsg_default_instance_;
}  // namespace IntelliSwing
PROTOBUF_NAMESPACE_OPEN
template<> ::IntelliSwing::Point2f* Arena::CreateMaybeMessage<::IntelliSwing::Point2f>(Arena*);
template<> ::IntelliSwing::Point2i* Arena::CreateMaybeMessage<::IntelliSwing::Point2i>(Arena*);
template<> ::IntelliSwing::Point3f* Arena::CreateMaybeMessage<::IntelliSwing::Point3f>(Arena*);
template<> ::IntelliSwing::Point3i* Arena::CreateMaybeMessage<::IntelliSwing::Point3i>(Arena*);
template<> ::IntelliSwing::ReturnMsg* Arena::CreateMaybeMessage<::IntelliSwing::ReturnMsg>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace IntelliSwing {

// ===================================================================

class Point2i final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IntelliSwing.Point2i) */ {
 public:
  inline Point2i() : Point2i(nullptr) {}
  ~Point2i() override;
  explicit constexpr Point2i(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Point2i(const Point2i& from);
  Point2i(Point2i&& from) noexcept
    : Point2i() {
    *this = ::std::move(from);
  }

  inline Point2i& operator=(const Point2i& from) {
    CopyFrom(from);
    return *this;
  }
  inline Point2i& operator=(Point2i&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Point2i& default_instance() {
    return *internal_default_instance();
  }
  static inline const Point2i* internal_default_instance() {
    return reinterpret_cast<const Point2i*>(
               &_Point2i_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Point2i& a, Point2i& b) {
    a.Swap(&b);
  }
  inline void Swap(Point2i* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Point2i* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Point2i* New() const final {
    return new Point2i();
  }

  Point2i* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Point2i>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Point2i& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Point2i& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Point2i* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IntelliSwing.Point2i";
  }
  protected:
  explicit Point2i(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
  };
  // int32 x = 1;
  void clear_x();
  ::PROTOBUF_NAMESPACE_ID::int32 x() const;
  void set_x(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_x() const;
  void _internal_set_x(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 y = 2;
  void clear_y();
  ::PROTOBUF_NAMESPACE_ID::int32 y() const;
  void set_y(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_y() const;
  void _internal_set_y(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:IntelliSwing.Point2i)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 x_;
  ::PROTOBUF_NAMESPACE_ID::int32 y_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_type_2eproto;
};
// -------------------------------------------------------------------

class Point2f final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IntelliSwing.Point2f) */ {
 public:
  inline Point2f() : Point2f(nullptr) {}
  ~Point2f() override;
  explicit constexpr Point2f(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Point2f(const Point2f& from);
  Point2f(Point2f&& from) noexcept
    : Point2f() {
    *this = ::std::move(from);
  }

  inline Point2f& operator=(const Point2f& from) {
    CopyFrom(from);
    return *this;
  }
  inline Point2f& operator=(Point2f&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Point2f& default_instance() {
    return *internal_default_instance();
  }
  static inline const Point2f* internal_default_instance() {
    return reinterpret_cast<const Point2f*>(
               &_Point2f_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(Point2f& a, Point2f& b) {
    a.Swap(&b);
  }
  inline void Swap(Point2f* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Point2f* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Point2f* New() const final {
    return new Point2f();
  }

  Point2f* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Point2f>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Point2f& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Point2f& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Point2f* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IntelliSwing.Point2f";
  }
  protected:
  explicit Point2f(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
  };
  // float x = 1;
  void clear_x();
  float x() const;
  void set_x(float value);
  private:
  float _internal_x() const;
  void _internal_set_x(float value);
  public:

  // float y = 2;
  void clear_y();
  float y() const;
  void set_y(float value);
  private:
  float _internal_y() const;
  void _internal_set_y(float value);
  public:

  // @@protoc_insertion_point(class_scope:IntelliSwing.Point2f)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  float x_;
  float y_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_type_2eproto;
};
// -------------------------------------------------------------------

class Point3i final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IntelliSwing.Point3i) */ {
 public:
  inline Point3i() : Point3i(nullptr) {}
  ~Point3i() override;
  explicit constexpr Point3i(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Point3i(const Point3i& from);
  Point3i(Point3i&& from) noexcept
    : Point3i() {
    *this = ::std::move(from);
  }

  inline Point3i& operator=(const Point3i& from) {
    CopyFrom(from);
    return *this;
  }
  inline Point3i& operator=(Point3i&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Point3i& default_instance() {
    return *internal_default_instance();
  }
  static inline const Point3i* internal_default_instance() {
    return reinterpret_cast<const Point3i*>(
               &_Point3i_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(Point3i& a, Point3i& b) {
    a.Swap(&b);
  }
  inline void Swap(Point3i* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Point3i* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Point3i* New() const final {
    return new Point3i();
  }

  Point3i* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Point3i>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Point3i& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Point3i& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Point3i* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IntelliSwing.Point3i";
  }
  protected:
  explicit Point3i(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
  };
  // int32 x = 1;
  void clear_x();
  ::PROTOBUF_NAMESPACE_ID::int32 x() const;
  void set_x(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_x() const;
  void _internal_set_x(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 y = 2;
  void clear_y();
  ::PROTOBUF_NAMESPACE_ID::int32 y() const;
  void set_y(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_y() const;
  void _internal_set_y(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 z = 3;
  void clear_z();
  ::PROTOBUF_NAMESPACE_ID::int32 z() const;
  void set_z(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_z() const;
  void _internal_set_z(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:IntelliSwing.Point3i)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 x_;
  ::PROTOBUF_NAMESPACE_ID::int32 y_;
  ::PROTOBUF_NAMESPACE_ID::int32 z_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_type_2eproto;
};
// -------------------------------------------------------------------

class Point3f final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IntelliSwing.Point3f) */ {
 public:
  inline Point3f() : Point3f(nullptr) {}
  ~Point3f() override;
  explicit constexpr Point3f(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Point3f(const Point3f& from);
  Point3f(Point3f&& from) noexcept
    : Point3f() {
    *this = ::std::move(from);
  }

  inline Point3f& operator=(const Point3f& from) {
    CopyFrom(from);
    return *this;
  }
  inline Point3f& operator=(Point3f&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Point3f& default_instance() {
    return *internal_default_instance();
  }
  static inline const Point3f* internal_default_instance() {
    return reinterpret_cast<const Point3f*>(
               &_Point3f_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(Point3f& a, Point3f& b) {
    a.Swap(&b);
  }
  inline void Swap(Point3f* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Point3f* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Point3f* New() const final {
    return new Point3f();
  }

  Point3f* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Point3f>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Point3f& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Point3f& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Point3f* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IntelliSwing.Point3f";
  }
  protected:
  explicit Point3f(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
  };
  // float x = 1;
  void clear_x();
  float x() const;
  void set_x(float value);
  private:
  float _internal_x() const;
  void _internal_set_x(float value);
  public:

  // float y = 2;
  void clear_y();
  float y() const;
  void set_y(float value);
  private:
  float _internal_y() const;
  void _internal_set_y(float value);
  public:

  // float z = 3;
  void clear_z();
  float z() const;
  void set_z(float value);
  private:
  float _internal_z() const;
  void _internal_set_z(float value);
  public:

  // @@protoc_insertion_point(class_scope:IntelliSwing.Point3f)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  float x_;
  float y_;
  float z_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_type_2eproto;
};
// -------------------------------------------------------------------

class ReturnMsg final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IntelliSwing.ReturnMsg) */ {
 public:
  inline ReturnMsg() : ReturnMsg(nullptr) {}
  ~ReturnMsg() override;
  explicit constexpr ReturnMsg(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ReturnMsg(const ReturnMsg& from);
  ReturnMsg(ReturnMsg&& from) noexcept
    : ReturnMsg() {
    *this = ::std::move(from);
  }

  inline ReturnMsg& operator=(const ReturnMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReturnMsg& operator=(ReturnMsg&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReturnMsg& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReturnMsg* internal_default_instance() {
    return reinterpret_cast<const ReturnMsg*>(
               &_ReturnMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(ReturnMsg& a, ReturnMsg& b) {
    a.Swap(&b);
  }
  inline void Swap(ReturnMsg* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReturnMsg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ReturnMsg* New() const final {
    return new ReturnMsg();
  }

  ReturnMsg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ReturnMsg>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ReturnMsg& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ReturnMsg& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReturnMsg* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "IntelliSwing.ReturnMsg";
  }
  protected:
  explicit ReturnMsg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrorDescFieldNumber = 3,
    kIsOKFieldNumber = 1,
    kErrorCodeFieldNumber = 2,
  };
  // string errorDesc = 3;
  void clear_errordesc();
  const std::string& errordesc() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_errordesc(ArgT0&& arg0, ArgT... args);
  std::string* mutable_errordesc();
  PROTOBUF_MUST_USE_RESULT std::string* release_errordesc();
  void set_allocated_errordesc(std::string* errordesc);
  private:
  const std::string& _internal_errordesc() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_errordesc(const std::string& value);
  std::string* _internal_mutable_errordesc();
  public:

  // bool isOK = 1;
  void clear_isok();
  bool isok() const;
  void set_isok(bool value);
  private:
  bool _internal_isok() const;
  void _internal_set_isok(bool value);
  public:

  // int32 errorCode = 2;
  void clear_errorcode();
  ::PROTOBUF_NAMESPACE_ID::int32 errorcode() const;
  void set_errorcode(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_errorcode() const;
  void _internal_set_errorcode(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:IntelliSwing.ReturnMsg)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr errordesc_;
  bool isok_;
  ::PROTOBUF_NAMESPACE_ID::int32 errorcode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_type_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Point2i

// int32 x = 1;
inline void Point2i::clear_x() {
  x_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point2i::_internal_x() const {
  return x_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point2i::x() const {
  // @@protoc_insertion_point(field_get:IntelliSwing.Point2i.x)
  return _internal_x();
}
inline void Point2i::_internal_set_x(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  x_ = value;
}
inline void Point2i::set_x(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:IntelliSwing.Point2i.x)
}

// int32 y = 2;
inline void Point2i::clear_y() {
  y_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point2i::_internal_y() const {
  return y_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point2i::y() const {
  // @@protoc_insertion_point(field_get:IntelliSwing.Point2i.y)
  return _internal_y();
}
inline void Point2i::_internal_set_y(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  y_ = value;
}
inline void Point2i::set_y(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:IntelliSwing.Point2i.y)
}

// -------------------------------------------------------------------

// Point2f

// float x = 1;
inline void Point2f::clear_x() {
  x_ = 0;
}
inline float Point2f::_internal_x() const {
  return x_;
}
inline float Point2f::x() const {
  // @@protoc_insertion_point(field_get:IntelliSwing.Point2f.x)
  return _internal_x();
}
inline void Point2f::_internal_set_x(float value) {
  
  x_ = value;
}
inline void Point2f::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:IntelliSwing.Point2f.x)
}

// float y = 2;
inline void Point2f::clear_y() {
  y_ = 0;
}
inline float Point2f::_internal_y() const {
  return y_;
}
inline float Point2f::y() const {
  // @@protoc_insertion_point(field_get:IntelliSwing.Point2f.y)
  return _internal_y();
}
inline void Point2f::_internal_set_y(float value) {
  
  y_ = value;
}
inline void Point2f::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:IntelliSwing.Point2f.y)
}

// -------------------------------------------------------------------

// Point3i

// int32 x = 1;
inline void Point3i::clear_x() {
  x_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point3i::_internal_x() const {
  return x_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point3i::x() const {
  // @@protoc_insertion_point(field_get:IntelliSwing.Point3i.x)
  return _internal_x();
}
inline void Point3i::_internal_set_x(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  x_ = value;
}
inline void Point3i::set_x(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:IntelliSwing.Point3i.x)
}

// int32 y = 2;
inline void Point3i::clear_y() {
  y_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point3i::_internal_y() const {
  return y_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point3i::y() const {
  // @@protoc_insertion_point(field_get:IntelliSwing.Point3i.y)
  return _internal_y();
}
inline void Point3i::_internal_set_y(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  y_ = value;
}
inline void Point3i::set_y(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:IntelliSwing.Point3i.y)
}

// int32 z = 3;
inline void Point3i::clear_z() {
  z_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point3i::_internal_z() const {
  return z_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Point3i::z() const {
  // @@protoc_insertion_point(field_get:IntelliSwing.Point3i.z)
  return _internal_z();
}
inline void Point3i::_internal_set_z(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  z_ = value;
}
inline void Point3i::set_z(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:IntelliSwing.Point3i.z)
}

// -------------------------------------------------------------------

// Point3f

// float x = 1;
inline void Point3f::clear_x() {
  x_ = 0;
}
inline float Point3f::_internal_x() const {
  return x_;
}
inline float Point3f::x() const {
  // @@protoc_insertion_point(field_get:IntelliSwing.Point3f.x)
  return _internal_x();
}
inline void Point3f::_internal_set_x(float value) {
  
  x_ = value;
}
inline void Point3f::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:IntelliSwing.Point3f.x)
}

// float y = 2;
inline void Point3f::clear_y() {
  y_ = 0;
}
inline float Point3f::_internal_y() const {
  return y_;
}
inline float Point3f::y() const {
  // @@protoc_insertion_point(field_get:IntelliSwing.Point3f.y)
  return _internal_y();
}
inline void Point3f::_internal_set_y(float value) {
  
  y_ = value;
}
inline void Point3f::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:IntelliSwing.Point3f.y)
}

// float z = 3;
inline void Point3f::clear_z() {
  z_ = 0;
}
inline float Point3f::_internal_z() const {
  return z_;
}
inline float Point3f::z() const {
  // @@protoc_insertion_point(field_get:IntelliSwing.Point3f.z)
  return _internal_z();
}
inline void Point3f::_internal_set_z(float value) {
  
  z_ = value;
}
inline void Point3f::set_z(float value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:IntelliSwing.Point3f.z)
}

// -------------------------------------------------------------------

// ReturnMsg

// bool isOK = 1;
inline void ReturnMsg::clear_isok() {
  isok_ = false;
}
inline bool ReturnMsg::_internal_isok() const {
  return isok_;
}
inline bool ReturnMsg::isok() const {
  // @@protoc_insertion_point(field_get:IntelliSwing.ReturnMsg.isOK)
  return _internal_isok();
}
inline void ReturnMsg::_internal_set_isok(bool value) {
  
  isok_ = value;
}
inline void ReturnMsg::set_isok(bool value) {
  _internal_set_isok(value);
  // @@protoc_insertion_point(field_set:IntelliSwing.ReturnMsg.isOK)
}

// int32 errorCode = 2;
inline void ReturnMsg::clear_errorcode() {
  errorcode_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ReturnMsg::_internal_errorcode() const {
  return errorcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ReturnMsg::errorcode() const {
  // @@protoc_insertion_point(field_get:IntelliSwing.ReturnMsg.errorCode)
  return _internal_errorcode();
}
inline void ReturnMsg::_internal_set_errorcode(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  errorcode_ = value;
}
inline void ReturnMsg::set_errorcode(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_errorcode(value);
  // @@protoc_insertion_point(field_set:IntelliSwing.ReturnMsg.errorCode)
}

// string errorDesc = 3;
inline void ReturnMsg::clear_errordesc() {
  errordesc_.ClearToEmpty();
}
inline const std::string& ReturnMsg::errordesc() const {
  // @@protoc_insertion_point(field_get:IntelliSwing.ReturnMsg.errorDesc)
  return _internal_errordesc();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ReturnMsg::set_errordesc(ArgT0&& arg0, ArgT... args) {
 
 errordesc_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:IntelliSwing.ReturnMsg.errorDesc)
}
inline std::string* ReturnMsg::mutable_errordesc() {
  std::string* _s = _internal_mutable_errordesc();
  // @@protoc_insertion_point(field_mutable:IntelliSwing.ReturnMsg.errorDesc)
  return _s;
}
inline const std::string& ReturnMsg::_internal_errordesc() const {
  return errordesc_.Get();
}
inline void ReturnMsg::_internal_set_errordesc(const std::string& value) {
  
  errordesc_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* ReturnMsg::_internal_mutable_errordesc() {
  
  return errordesc_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* ReturnMsg::release_errordesc() {
  // @@protoc_insertion_point(field_release:IntelliSwing.ReturnMsg.errorDesc)
  return errordesc_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void ReturnMsg::set_allocated_errordesc(std::string* errordesc) {
  if (errordesc != nullptr) {
    
  } else {
    
  }
  errordesc_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), errordesc,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:IntelliSwing.ReturnMsg.errorDesc)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace IntelliSwing

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_type_2eproto
